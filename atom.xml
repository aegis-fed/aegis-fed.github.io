<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Aegis前端团队</title>
  
  <subtitle>front-end-developer</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://aegis.suzper.com/"/>
  <updated>2017-10-13T08:01:43.994Z</updated>
  <id>http://aegis.suzper.com/</id>
  
  <author>
    <name>Aegis</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>发布自己的vue组件库</title>
    <link href="http://aegis.suzper.com/2017/10/13/%E5%8F%91%E5%B8%83%E8%87%AA%E5%B7%B1%E7%9A%84vue%E7%BB%84%E4%BB%B6%E5%BA%93/"/>
    <id>http://aegis.suzper.com/2017/10/13/发布自己的vue组件库/</id>
    <published>2017-10-13T04:56:12.000Z</published>
    <updated>2017-10-13T08:01:43.994Z</updated>
    
    <content type="html"><![CDATA[<h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><p>总结一下最近练习的如何使用npm发布属于自己的vue组件库。虽然不成熟且十分简单，但是还是有收获的，后期会一点一点完善。</p><p>那么接下来的操作都按步骤来：（假设npm包取名cdcomponents）</p><h3 id="vue-cli新建项目"><a href="#vue-cli新建项目" class="headerlink" title="vue-cli新建项目"></a>vue-cli新建项目</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">vue init cdcomponents</div><div class="line">cd cdcomponents</div><div class="line">npm i</div></pre></td></tr></table></figure><a id="more"></a><h3 id="修改一些配置"><a href="#修改一些配置" class="headerlink" title="修改一些配置"></a>修改一些配置</h3><p><strong>1. 进入config/index.js, 将其中的build对象修改如下：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">build: &#123;</div><div class="line">    <span class="attr">env</span>: <span class="built_in">require</span>(<span class="string">'./prod.env'</span>),</div><div class="line">    <span class="attr">assetsRoot</span>: path.resolve(__dirname, <span class="string">'../dist'</span>),</div><div class="line">    <span class="attr">assetsPublicPath</span>: <span class="string">'/'</span>,</div><div class="line">    <span class="attr">assetsSubDirectory</span>: <span class="string">'/'</span>,</div><div class="line">    <span class="attr">productionSourceMap</span>: <span class="literal">true</span>,</div><div class="line">    <span class="comment">// Gzip off by default as many popular static hosts such as</span></div><div class="line">    <span class="comment">// Surge or Netlify already gzip all static assets for you.</span></div><div class="line">    <span class="comment">// Before setting to `true`, make sure to:</span></div><div class="line">    <span class="comment">// npm install --save-dev compression-webpack-plugin</span></div><div class="line">    productionGzip: <span class="literal">false</span>,</div><div class="line">    <span class="attr">productionGzipExtensions</span>: [<span class="string">'js'</span>, <span class="string">'css'</span>],</div><div class="line">    <span class="comment">// Run the build command with an extra argument to</span></div><div class="line">    <span class="comment">// View the bundle analyzer report after build finishes:</span></div><div class="line">    <span class="comment">// `npm run build --report`</span></div><div class="line">    <span class="comment">// Set to `true` or `false` to always turn it on or off</span></div><div class="line">    bundleAnalyzerReport: process.env.npm_config_report</div><div class="line">  &#125;</div></pre></td></tr></table></figure><p>这样打包的时候只会将入口文件的信息打包成一个js文件和一个css放到dist目录下面。</p><p><strong>2. 修改webpack.prod.config.js下面的output参数，并删除一些没用的配置，最终修改如下：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</div><div class="line"><span class="keyword">var</span> utils = <span class="built_in">require</span>(<span class="string">'./utils'</span>)</div><div class="line"><span class="keyword">var</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>)</div><div class="line"><span class="keyword">var</span> config = <span class="built_in">require</span>(<span class="string">'../config'</span>)</div><div class="line"><span class="keyword">var</span> merge = <span class="built_in">require</span>(<span class="string">'webpack-merge'</span>)</div><div class="line"><span class="keyword">var</span> baseWebpackConfig = <span class="built_in">require</span>(<span class="string">'./webpack.base.conf'</span>)</div><div class="line"><span class="keyword">var</span> CopyWebpackPlugin = <span class="built_in">require</span>(<span class="string">'copy-webpack-plugin'</span>)</div><div class="line"><span class="keyword">var</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>)</div><div class="line"><span class="keyword">var</span> ExtractTextPlugin = <span class="built_in">require</span>(<span class="string">'extract-text-webpack-plugin'</span>)</div><div class="line"><span class="keyword">var</span> OptimizeCSSPlugin = <span class="built_in">require</span>(<span class="string">'optimize-css-assets-webpack-plugin'</span>)</div><div class="line"></div><div class="line"><span class="keyword">var</span> env = config.build.env</div><div class="line"></div><div class="line"><span class="keyword">var</span> webpackConfig = merge(baseWebpackConfig, &#123;</div><div class="line">  <span class="attr">module</span>: &#123;</div><div class="line">    <span class="attr">rules</span>: utils.styleLoaders(&#123;</div><div class="line">      <span class="attr">sourceMap</span>: config.build.productionSourceMap,</div><div class="line">      <span class="attr">extract</span>: <span class="literal">true</span></div><div class="line">    &#125;)</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">devtool</span>: config.build.productionSourceMap ? <span class="string">'#source-map'</span> : <span class="literal">false</span>,</div><div class="line">  <span class="attr">output</span>: &#123;</div><div class="line">    <span class="attr">path</span>: config.build.assetsRoot,</div><div class="line">    <span class="attr">publicPath</span>: config.build.assetsPublicPath,</div><div class="line">    <span class="attr">filename</span>: <span class="string">'cdcomponents.min.js'</span>,</div><div class="line">    <span class="attr">library</span>: <span class="string">'CdComponents'</span>,</div><div class="line">    <span class="attr">libraryTarget</span>: <span class="string">'umd'</span></div><div class="line">  &#125;,</div><div class="line">  <span class="attr">plugins</span>: [</div><div class="line">    <span class="comment">// http://vuejs.github.io/vue-loader/en/workflow/production.html</span></div><div class="line">    <span class="keyword">new</span> webpack.DefinePlugin(&#123;</div><div class="line">      <span class="string">'process.env'</span>: env</div><div class="line">    &#125;),</div><div class="line">    <span class="keyword">new</span> webpack.optimize.UglifyJsPlugin(&#123;</div><div class="line">      <span class="attr">compress</span>: &#123;</div><div class="line">        <span class="attr">warnings</span>: <span class="literal">false</span></div><div class="line">      &#125;,</div><div class="line">      <span class="attr">sourceMap</span>: <span class="literal">true</span></div><div class="line">    &#125;),</div><div class="line">    <span class="comment">// extract css into its own file</span></div><div class="line">    <span class="keyword">new</span> ExtractTextPlugin(&#123;</div><div class="line">      <span class="attr">filename</span>: <span class="string">'cdcomponents.min.css'</span></div><div class="line">    &#125;),</div><div class="line">    <span class="keyword">new</span> OptimizeCSSPlugin()</div><div class="line">  ]</div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="built_in">module</span>.exports = webpackConfig</div></pre></td></tr></table></figure><h3 id="开始写组件"><a href="#开始写组件" class="headerlink" title="开始写组件"></a>开始写组件</h3><p>组件的具体实现过程我就不阐述了，最终的src目录和packages目录结构如下：</p><p>其中packages放置各个组件，src里面的main.js进行组件的插件化处理</p><p><img src="http://oifeo8q69.bkt.clouddn.com/npmpost1.jpg" alt=""></p><p>packages/rating/index.js文件如下，这里加了install方法是为了后面留出口的时候，用户使用可以直接引入单组件，而不必引入整个组件库</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> Rating <span class="keyword">from</span> <span class="string">'./src/rating.vue'</span>;</div><div class="line"></div><div class="line"><span class="comment">/* istanbul ignore next */</span></div><div class="line">Rating.install = <span class="function"><span class="keyword">function</span>(<span class="params">Vue</span>) </span>&#123;</div><div class="line">  Vue.component(Rating.name, Rating);</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> Rating;</div></pre></td></tr></table></figure><p>后续使用单组件就可以类似这样实现：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; Rating &#125; <span class="keyword">from</span> <span class="string">'cdcomponents'</span>;</div><div class="line"></div><div class="line">此处省略...</div><div class="line"></div><div class="line">export <span class="keyword">default</span> <span class="keyword">new</span> Vue(&#123;</div><div class="line">  <span class="attr">el</span>: <span class="string">'#app'</span>,</div><div class="line">  <span class="attr">template</span>: <span class="string">'&lt;Rating /&gt;'</span>,</div><div class="line">  <span class="attr">components</span>: &#123; Rating &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure><p>packages/rating/src/rating.vue文件， 组件我就不写了，主要实现了五星评价的功能。</p><p>src/main.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// import Vue from 'vue';</span></div><div class="line"><span class="comment">// import App from './App.vue';</span></div><div class="line"><span class="keyword">import</span> Rating <span class="keyword">from</span> <span class="string">'../packages/ratings'</span>;</div><div class="line"></div><div class="line"><span class="keyword">const</span> components = [</div><div class="line">  Rating</div><div class="line">];</div><div class="line"><span class="keyword">const</span> install = <span class="function"><span class="keyword">function</span>(<span class="params">vue</span>) </span>&#123;</div><div class="line">  <span class="comment">/* istanbul ignore if */</span></div><div class="line">  <span class="keyword">if</span> (install.installed) <span class="keyword">return</span>;</div><div class="line"></div><div class="line">  <span class="comment">/*eslint-disable*/</span></div><div class="line">  components.map(<span class="function">(<span class="params">component</span>) =&gt;</span> &#123;</div><div class="line">    vue.component(component.name, component);</div><div class="line">  &#125;);</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">/* istanbul ignore if */</span></div><div class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="built_in">window</span> !== <span class="string">'undefined'</span> &amp;&amp; <span class="built_in">window</span>.Vue) &#123;</div><div class="line">  install(<span class="built_in">window</span>.Vue);</div><div class="line">&#125;;</div><div class="line"><span class="comment">// 测试的时候加上注释</span></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</div><div class="line">  install,</div><div class="line">  Rating</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">// 测试的时候打开注释</span></div><div class="line"><span class="comment">// Vue.use(install);</span></div><div class="line"><span class="comment">//</span></div><div class="line"><span class="comment">// export default new Vue(&#123;</span></div><div class="line"><span class="comment">//   el: '#app',</span></div><div class="line"><span class="comment">//   template: '&lt;App/&gt;',</span></div><div class="line"><span class="comment">//   components: &#123; App &#125;</span></div><div class="line"><span class="comment">// &#125;);</span></div></pre></td></tr></table></figure><p>至此，组件的组件的注册插件都写好了，最后一步就是稍微修改一下package.json文件：<br>因为这个组件包是能公用的，所以”private”: false</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="string">"private"</span>: <span class="literal">false</span>,</div><div class="line"><span class="string">"main"</span>: <span class="string">"dist/cdcomponents.min.js"</span>,</div></pre></td></tr></table></figure><p>这里的main配置意思是，别人用这个包 import CdComponents from ‘cdcomponents’; 时，引入的文件。<br>至此，你的npm包就可以发布到网上，当别人npm i –save cdcomponents以后，在项目中可以使用以下方式引入：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> CdComponents <span class="keyword">from</span> <span class="string">'cdcomponents'</span>; <span class="comment">// 默认引入 dist/cdcomponents.min.js</span></div><div class="line"><span class="keyword">import</span> <span class="string">'cdcomponents/dist/cdcomponents.min.css'</span>;</div><div class="line"></div><div class="line">Vue.use(CdComponents);</div></pre></td></tr></table></figure><h3 id="npm-发布"><a href="#npm-发布" class="headerlink" title="npm 发布"></a>npm 发布</h3><p>首先在本地执行<code>npm adduser</code>,如果有账号就直接输入用户名密码登录，如果没有要先去官网注册一下账号。</p><p>然后打包本地文件，<code>npm run build</code>，这时根目录下就会出现dist文件夹，里面包含了打包好的js和css文件。</p><p>然后执行<code>npm publish</code>就可以发布到npm上面啦！大功告成</p><p>如果后期需要更新包，那就执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">npm run build</div><div class="line">npm version patch //小版本更新</div><div class="line">npm publish</div><div class="line"></div><div class="line">想要删除包</div><div class="line">npm unpublish --force</div></pre></td></tr></table></figure><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p><a href="https://github.com/zp1112/cdcomponents" target="_blank" rel="external">github地址</a><br><a href="https://www.npmjs.com/package/cdcomponents" target="_blank" rel="external">npm地址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;目标&quot;&gt;&lt;a href=&quot;#目标&quot; class=&quot;headerlink&quot; title=&quot;目标&quot;&gt;&lt;/a&gt;目标&lt;/h2&gt;&lt;p&gt;总结一下最近练习的如何使用npm发布属于自己的vue组件库。虽然不成熟且十分简单，但是还是有收获的，后期会一点一点完善。&lt;/p&gt;
&lt;p&gt;那么接下来的操作都按步骤来：（假设npm包取名cdcomponents）&lt;/p&gt;
&lt;h3 id=&quot;vue-cli新建项目&quot;&gt;&lt;a href=&quot;#vue-cli新建项目&quot; class=&quot;headerlink&quot; title=&quot;vue-cli新建项目&quot;&gt;&lt;/a&gt;vue-cli新建项目&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;vue init cdcomponents&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cd cdcomponents&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm i&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="技术" scheme="http://aegis.suzper.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="vue" scheme="http://aegis.suzper.com/tags/vue/"/>
    
      <category term="javascript" scheme="http://aegis.suzper.com/tags/javascript/"/>
    
      <category term="npm" scheme="http://aegis.suzper.com/tags/npm/"/>
    
  </entry>
  
</feed>
